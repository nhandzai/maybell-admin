<div class="container">
  <div class="bg-white">
    <h1 class="text-2xl font-bold mb-4">
      Create Product
    </h1>
    <form onsubmit="handleFormSubmit(event)" class="flex flex-col gap-4">
      <div>
        <label class="block font-semibold">Product Name:</label>
        <input
          type="text"
          name="name"
          placeholder="Enter product name"
          class="border p-2 w-full"
          required
        />
      </div>
      <div>
        <label class="block font-semibold">Price:</label>
        <input
          type="number"
          name="price"
          placeholder="Enter price"
          class="border p-2 w-full"
          required
          min="0",
          step="0.01"
        />
      </div>
      <div>
        <label class="block font-semibold">Real price:</label>
        <input
          type="number"
          name="realPrice"
          placeholder="Enter price"
          class="border p-2 w-full"
          required
          min="0",
          step="0.01"
        />
      </div>
      <div>
        <label class="block font-semibold">Brand:</label>
        <select name="brand" id="brand" class="border p-2 w-full" required>
          <option value="" disabled selected>Select a brand</option>
        </select>
      </div>
      <div>
        <label class="block font-semibold">Category:</label>
        <select
          name="category"
          id="category"
          class="border p-2 w-full"
          required
        >
          <option value="" disabled selected>Select a category</option>
        </select>
      </div>
      <div>
        <label class="block font-semibold">Stock Quantity:</label>
        <input
          type="number"
          name="stockQuantity"
          placeholder="Enter stock quantity"
          class="border p-2 w-full"
          required
          min="0",
          step="1"
        />
      </div>
      <div>
        <label class="block font-semibold">Short Description:</label>
        <textarea
          name="shortDescription"
          placeholder="Enter short description"
          class="border p-2 w-full"
          required
        ></textarea>
      </div>
      <div>
        <label class="block font-semibold">Detail Description:</label>
        <textarea
          name="detail"
          placeholder="Enter detailed description"
          class="border p-2 w-full"
          required
        ></textarea>
      </div>
      <div>
        <label class="block font-semibold">Material:</label>
        <input
          type="text"
          name="material"
          placeholder="Enter material"
          class="border p-2 w-full"
          required
        />
      </div>
      <div>
        <label class="block font-semibold">Product Status:</label>
        <select
          name="status"
          class="border p-2 w-full"
          required
        >
          <option value="on_stock">On Stock</option>
          <option value="out_of_stock">Out of Stock</option>
          <option value="suspend">Suspend</option>
        </select>
      </div>
      <div>
        <label class="block font-semibold">Weight (kg):</label>
        <input
          type="number"
          name="weightKg"
          placeholder="Enter weight in kg"
          class="border p-2 w-full"
          required
          min="0",
          step="0.01"
        />
      </div>
      <div>
        <label class="block font-semibold">Product Images:</label>
        <input
          type="file"
          name="images"
          accept="image/*"
          class="border p-2 w-full"
          multiple
        />
      </div>
      <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-lg">
        Create Product
      </button>
    </form>
  </div>
</div>

<script>
  // Fetch brand and category data
  async function fetchBrandCategoryData() {
    try {
      const response = await fetch("/api/brandCategory");
      const data = await response.json();

      // Populate the brand options
      const brandSelect = document.getElementById("brand");
      data.brandCategory.brands.forEach((brand) => {
        const option = document.createElement("option");
        option.value = brand.id;
        option.textContent = `${brand.id}. ${brand.brand}`;
        brandSelect.appendChild(option);
      });

      // Populate the category options
      const categorySelect = document.getElementById("category");
      data.brandCategory.categories.forEach((category) => {
        const option = document.createElement("option");
        option.value = category.id;
        option.textContent = `${category.id}. ${category.category}`;
        categorySelect.appendChild(option);
      });
    } catch (error) {
      console.error("Error fetching brand/category data:", error);
    }
  }

  async function handleFormSubmit(event) {
    event.preventDefault();

    const formData = new FormData(event.target);
    console.log('Form data:', formData);
   
    try {
      const response = await fetch('/api/product', {
        method: 'POST',
        body: formData, 
      });

      const result = await response.json();
      console.log('API response:', result);

      if (response.ok) {
        alert('Product created successfully!');
        window.location.href = '/'; 
      } else {
        alert('Failed to update product: ' + result.message);
      }
    } catch (error) {
      console.error('Error updating profile:', error);
      alert('An error occurred while updating the profile.');
    }
 
  }

  window.onload = fetchBrandCategoryData;
</script>
