<div class="p-4">
  <form id="filter-form" class="flex gap-4">
    <input
      type="text"
      id="filter-name"
      placeholder="Filter by name"
      class="px-4 py-2 border rounded"
    />
    <input
      type="text"
      id="filter-brand"
      placeholder="Filter by brand"
      class="px-4 py-2 border rounded"
    />
    <input
      type="text"
      id="filter-category"
      placeholder="Filter by category"
      class="px-4 py-2 border rounded"
    />
    <button
      type="submit"
      class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
    >
      Filter
    </button>
  </form>

  <form id="sort-form" class="flex gap-4 mt-4">
    <select id="sort-field" class="px-4 py-2 border rounded">
      <option value="name">Name</option>
      <option value="price">Price</option>
      <option value="brand">Brand</option>
      <option value="category">Category</option>
      <option value="stockQuantity">Stock Quantity</option>
      <option value="totalPurchase">Total Purchase</option>
      <option value="createdAt">Creation time</option>
    </select>
    <select id="sort-order" class="px-4 py-2 border rounded">
      <option value="asc">Ascending</option>
      <option value="desc">Descending</option>
    </select>
    <button
      type="submit"
      class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
    >
      Sort
    </button>
  </form>
</div>

<div class="relative overflow-x-auto">
  <table class="w-full text-sm text-left rtl:text-right text-gray-500">
    <thead class="text-xs text-gray-700 uppercase bg-gray-50">
      <tr>
        <th scope="col" class="px-6 py-3">Id</th>
        <th scope="col" class="px-6 py-3">Name</th>
        <th scope="col" class="px-6 py-3">Price</th>
        <th scope="col" class="px-6 py-3">Brand</th>
        <th scope="col" class="px-6 py-3">Category</th>
        <th scope="col" class="px-6 py-3">Stock Quantity</th>
        <th scope="col" class="px-6 py-3">Total Purchase</th>
        <th scope="col" class="px-6 py-3">Created At</th>
        <th scope="col" class="px-6 py-3">Actions</th>
      </tr>
    </thead>
    <tbody id="product-list">
      <% products.forEach(product => { %>
      <tr class="bg-white border-b">
        <th
          scope="row"
          class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap"
        >
          <%= product.id %>
        </th>
        <td class="px-6 py-4"><%= product.name %></td>
        <td class="px-6 py-4"><%= product.price %></td>
        <td class="px-6 py-4"><%= product.brands.brand %></td>
        <td class="px-6 py-4"><%= product.categories.category %></td>
        <td class="px-6 py-4"><%= product.stockQuantity %></td>
        <td class="px-6 py-4"><%= product.totalPurchase %></td>
        <td class="px-6 py-4"><%= product.createdAt %></td>
        <td class="flex px-6 py-4 gap-4">
          <button
            class="px-4 py-2 text-white rounded bg-red-500 hover:bg-red-600"
            title="Update"
            data-id="<%= product.id %>"
          >
            Update
          </button>
          <button
            class="px-4 py-2 text-white rounded bg-blue-500 hover:bg-blue-600"
            title="View"
            data-id="<%= product.id %>"
          >
            View
          </button>
        </td>
      </tr>
      <% }); %>
    </tbody>
  </table>
</div>
<div class="pagination mt-4 flex justify-center">
  <% for (let i = 1; i <= pageNumber; i++) { %>
  <button
    class="pagination-button px-4 py-2 text-sm rounded-lg <%= page === i ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700' %>"
    data-page="<%= i %>"
  >
    <%= i %>
  </button>
  <% } %>
</div>

<script>
  async function fetchAndUpdate(page) {
    try {
      const url = new URL(window.location);

      const nameFilter = url.searchParams.get("name") || "";
      const categoryFilter = url.searchParams.get("category") || "";
      const brandFilter = url.searchParams.get("brand") || "";
      const sortField = url.searchParams.get("sortField") || "name";
      const sortOrder = url.searchParams.get("sortOrder") || "asc";

      url.searchParams.set("page", page);
      window.history.pushState({}, "", url);

      const response = await fetch(
        `/api/products?page=${page}&name=${encodeURIComponent(
          nameFilter
        )}&category=${encodeURIComponent(
          categoryFilter
        )}&brand=${encodeURIComponent(
          brandFilter
        )}&sortField=${sortField}&sortOrder=${sortOrder}`
      );

      if (!response.ok) throw new Error("Failed to fetch data");

      const data = await response.json();

      const tbody = document.getElementById("product-list");
      tbody.innerHTML = data.products
        .map((product) => {
          return `
      <tr class="bg-white border-b">
        <th
          scope="row"
          class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap"
        >
          ${product.id}
        </th>
        <td class="px-6 py-4">${product.name}</td>
        <td class="px-6 py-4">${product.price}</td>
        <td class="px-6 py-4">${product.brands.brand}</td>
        <td class="px-6 py-4">${product.categories.category}</td>
        <td class="px-6 py-4">${product.stockQuantity}</td>
        <td class="px-6 py-4">${product.totalPurchase}</td>
        <td class="px-6 py-4">${product.createdAt}</td>
        <td class="flex px-6 py-4 gap-4">
          <button
            class="px-4 py-2 text-white rounded bg-red-500 hover:bg-red-600"
            title="Update"
            data-id="${product.id}"
          >
            Update
          </button>
          <button
            class="px-4 py-2 text-white rounded bg-blue-500 hover:bg-blue-600"
            title="View"
            data-id="${product.id}"
          >
            View
          </button>
        </td>
      </tr>
                `;
        })
        .join("");

      const paginationContainer = document.querySelector(".pagination");
      paginationContainer.innerHTML = Array.from(
        { length: data.pageNumber },
        (_, i) => `
                <button
                  class="pagination-button px-4 py-2 text-sm rounded-lg ${
                    data.page === i + 1
                      ? "bg-blue-500 text-white"
                      : "bg-gray-300 text-gray-700"
                  }"
                  data-page="${i + 1}"
                >
                  ${i + 1}
                </button>
              `
      ).join("");

      document.querySelectorAll(".pagination-button").forEach((button) => {
        button.addEventListener("click", (event) => {
          const page = button.getAttribute("data-page");
          fetchAndUpdate(page);
        });
      });
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  }
  //filter-form
  document
    .getElementById("filter-form")
    .addEventListener("submit", function (event) {
      event.preventDefault();

      const nameFilter = document.getElementById("filter-name").value;
      const categoryFilter = document.getElementById("filter-category").value;
      const brandFilter = document.getElementById("filter-brand").value;

      const url = new URL(window.location);
      url.searchParams.set("name", nameFilter);
      url.searchParams.set("category", categoryFilter);
      url.searchParams.set("brand", brandFilter);
      url.searchParams.set("page", 1);
      window.history.pushState({}, "", url);

      fetchAndUpdate(1);
    });
  //sort-form
  document
    .getElementById("sort-form")
    .addEventListener("submit", function (event) {
      event.preventDefault();

      const sortField = document.getElementById("sort-field").value;
      const sortOrder = document.getElementById("sort-order").value;

      const url = new URL(window.location);
      url.searchParams.set("sortField", sortField);
      url.searchParams.set("sortOrder", sortOrder);
      url.searchParams.set("page", 1);
      window.history.pushState({}, "", url);

      fetchAndUpdate(1);
    });

  const productList = document.getElementById("product-list");

  productList.addEventListener("click", async (event) => {
    const button = event.target.closest("button[data-id]");
    console.log("Button clicked");
    if (button) {
      const productId = button.getAttribute("data-id");
      const action = button.getAttribute("title");
      console.log(action);
      if (action === "Update") {
        try {
          const response = await fetch(`/api/productDetail?id=${productId}`);
          const result = await response.json();

          const brandCategoryResponse = await fetch("/api/brandCategory");
          const brandCategoryData = await brandCategoryResponse.json();

          if (response.ok) {
            const modalContainer = document.createElement("div");
            modalContainer.innerHTML = `
            <div class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
              <div class="bg-white p-8 rounded-lg w-1/2 overflow-y-auto h-3/4">
                <h2 class="text-xl font-bold mb-4">Update Product</h2>
                <form id="productForm">
                  <div class="flex flex-col gap-4">
                    <div class="flex">
                      <label class="w-1/4 font-semibold">Id (read   only):</label>
                      <input
                        type="text"
                        value="${result.product.id}"
                        readonly
                        class="border p-2 w-3/4"
                      />
                    </div>
                    <div class="flex">
                      <label class="w-1/4 font-semibold">Name:</label>
                      <input
                        type="text"
                        value="${result.product.name}"
                        id="name"
                        class="border p-2 w-3/4"
                      />
                    </div>
                  <div class="flex">
                      <label class="w-1/4 font-semibold">Brand:</label>
                      <select id="brand" class="border p-2 w-3/4">
                      <option value="" disabled selected>Select a brand</option>
                      
                        ${brandCategoryData.brandCategory.brands

                          .map(
                            (brand) =>
                              `<option value="${brand.id}" ${
                                result.product.brandId === brand.id
                                  ? "selected"
                                  : ""
                              }>${brand.id}. ${brand.brand}</option>`
                          )
                          .join("")}
                      </select>
                    </div>

                    <div class="flex">
                      <label class="w-1/4 font-semibold">Category:</label>
                      <select id="category" class="border p-2 w-3/4">
                      <option value="" disabled selected>Select a Category</option>
                        ${brandCategoryData.brandCategory.categories
                          .map(
                            (category) =>
                              `<option value="${category.id}" ${
                                result.product.categoryId === category.id
                                  ? "selected"
                                  : ""
                              }>${category.id}. ${category.category}</option>`
                          )
                          .join("")}
                      </select>
                    </div>
                    <div class="flex">
                      <label class="w-1/4 font-semibold">Price:</label>
                      <input
                        type="number"
                        value="${result.product.price}"
                        id="price"
                        class="border p-2 w-3/4",
                        min="0",
                        step="0.01"
                      />
                    </div>
                    <div class="flex">
                      <label class="w-1/4 font-semibold">Real Price:</label>
                      <input
                        type="number"
                        value="${result.product.realPrice}"
                        id="realPrice"
                        class="border p-2 w-3/4",
                        min="0",
                        step="0.01"
                      />
                    </div>
                    <div class="flex">
                      <label class="w-1/4 font-semibold">Stock Quantity:</label>
                      <input
                        type="number"
                        value="${result.product.stockQuantity}"
                        id="stockQuantity"
                        class="border p-2 w-3/4",
                        min="0",
                        step="1"
                      />
                    </div>
                    <div class="flex">
                      <label class="w-1/4 font-semibold">Status:</label>
                      <select
                        id="status"
                        class="border p-2 w-3/4"
                      >
                        <option value="On stock" ${
                          result.product.status === "On stock" ? "selected" : ""
                        }>On stock</option>
                        <option value="Out of stock" ${
                          result.product.status === "Out of stock"
                            ? "selected"
                            : ""
                        }>Out of stock</option>
                        <option value="Suspend" ${
                          result.product.status === "Suspend" ? "selected" : ""
                        }>Suspend</option>
                      </select>
                    </div>
                    <div class="flex">
                      <label class="w-1/4 font-semibold">Short Description:</label>
                      <input
                        type="text"
                        value="${result.product.shortDescription}"
                        id="shortDescription"
                        class="border p-2 w-3/4"
                      />
                    </div>
                    <div class="flex">
                      <label class="w-1/4 font-semibold">Detail Description:</label>
                      <input
                        type="text"
                        value="${result.product.detail}"
                        id="detail"
                        class="border p-2 w-3/4"
                      />
                    </div>
                    <div class="flex">
                      <label class="w-1/4 font-semibold">Material:</label>
                      <input
                        type="text"
                        value="${result.product.material}"
                        id="material"
                        class="border p-2 w-3/4"
                      />
                    </div>
                    <div class="flex">
                      <label class="w-1/4 font-semibold">Weight (Kg):</label>
                      <input
                        type="number"
                        value="${result.product.weightKg}"
                        id="weightKg"
                        class="border p-2 w-3/4",
                        min="0",
                        step="0.01"
                      />
                    </div>
                   <div class="flex">
                      <label class="w-1/4 font-semibold">Images:</label>
                      <div class="w-3/4 flex flex-wrap space-x-4">
                        ${result.product.productImages
                          .map(
                            (img, index) =>
                              `<div class="relative flex items-center">
                                <img src="${img.image}" alt="Product Image" class="object-contain" width="120" height="120">
                                <input 
                                  type="checkbox" 
                                  id="deleteImage${index}"
                                  value="${img.id}" 
                                  class="ml-2"
                                />
                              </div>`
                          )
                          .join("")}
                      </div>
                    </div>

                    <div class="flex">
                      <label class="w-1/4 font-semibold">Update Image:</label>
                      <div class="w-3/4 flex flex-col space-y-2">
                        <input
                          type="file"
                          accept="image/*"
                          class="border p-2"
                          id="image"
                          multiple
                        />
                        
                      </div>
                    </div>

                  </div>
                  <button type="submit" class="mt-4 text-white bg-blue-500 px-4 py-2 rounded-lg">
                    Update
                  </button>
                </form>
                <button
                  onclick="closeModal()"
                  class="mt-4 text-white bg-red-500 px-4 py-2 rounded-lg"
                >
                  Close
                </button>
              </div>
            </div>
          </div>
          `;

            document.body.appendChild(modalContainer);
            window.closeModal = function () {
              document.body.removeChild(modalContainer);
            };

            const form = document.getElementById("productForm");
            form.addEventListener("submit", async (event) => {
              event.preventDefault();

              const formData = new FormData();

              // Thêm các dữ liệu văn bản vào formData
              formData.append("id", productId);
              formData.append("name", document.getElementById("name").value);
              formData.append(
                "categoryId",
                document.getElementById("category").value
              );
              formData.append(
                "brandId",
                document.getElementById("brand").value
              );
              formData.append("price", document.getElementById("price").value);
              formData.append(
                "realPrice",
                document.getElementById("realPrice").value
              );
              formData.append(
                "stockQuantity",
                document.getElementById("stockQuantity").value
              );
              formData.append(
                "status",
                document.getElementById("status").value
              );
              formData.append(
                "shortDescription",
                document.getElementById("shortDescription").value
              );
              formData.append(
                "detail",
                document.getElementById("detail").value
              );
              formData.append(
                "material",
                document.getElementById("material").value
              );
              formData.append(
                "weightKg",
                document.getElementById("weightKg").value
              );

              const images = document.getElementById("image").files;
              for (let i = 0; i < images.length; i++) {
                formData.append("updateImages", images[i]);
              }

              const deleteImages = Array.from(
                document.querySelectorAll('input[type="checkbox"]:checked')
              ).map((checkbox) => checkbox.value);
              formData.append("deleteImages", JSON.stringify(deleteImages));

              try {
                const response = await fetch("/api/productUpdate", {
                  method: "POST",
                  body: formData,
                });

                const result = await response.json();
                if (response.ok) {
                  alert("Product updated successfully");
                  const url = new URL(window.location);
                  const page = url.searchParams.get("page") || 1;
                  fetchAndUpdate(page);
                  closeModal();
                } else {
                  alert("Failed to update the product");
                }
              } catch (error) {
                console.error("Error:", error);
              }
            });
          } else {
            alert("Failed to fetch the product details");
          }
        } catch (error) {
          console.error("Error:", error);
        }
      } else if (action === "View") {
        try {
          const response = await fetch(`/api/productDetail?id=${productId}`);
          const result = await response.json();

          if (response.ok) {
            const modalContainer = document.createElement("div");
            modalContainer.innerHTML = `
          <div class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
            <div class="bg-white p-8 rounded-lg w-1/2 overflow-y-auto h-3/4">
              <h2 class="text-xl font-bold mb-4">User Details</h2>
              <form>
                <div class="flex flex-col gap-4">
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Id:</label>
                    <input
                      type="text"
                      value="${result.product.id}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Full Name:</label>
                    <input
                      type="text"
                      value="${result.product.name}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Brand Id:</label>
                    <input
                      type="text"
                      value="${result.product.brandId}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Category Id:</label>
                    <input
                      type="text"
                      value="${result.product.categoryId}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Brand:</label>
                    <input
                      type="text"
                      value="${result.product.brands.brand}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Category:</label>
                    <input
                      type="text"
                      value="${result.product.categories.category}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Price:</label>
                    <input
                      type="text"
                      value="${result.product.price}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Real Price:</label>
                    <input
                      type="text"
                      value="${result.product.realPrice}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Stock Quantity:</label>
                    <input
                      type="text"
                      value="${result.product.stockQuantity}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Product status:</label>
                    <input
                      type="text"
                      value="${result.product.status}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Total Purchase:</label>
                    <input
                      type="text"
                      value="${result.product.totalPurchase}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Short Description:</label>
                    <input
                      type="text"
                      value="${result.product.shortDescription}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Detail Description:</label>
                    <input
                      type="text"
                      value="${result.product.detail}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Create Time:</label>
                    <input
                      type="text"
                      value="${result.product.createdAt}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Material:</label>
                    <input
                      type="text"
                      value="${result.product.material}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">WeightKg::</label>
                    <input
                      type="text"
                      value="${result.product.weightKg}"
                      readonly
                      class="border p-2 w-3/4"
                    />
                  </div>
                  <div class="flex">
                    <label class="w-1/4 font-semibold">Images:</label>
                    <div class="w-3/4 flex space-x-4">
                      ${result.product.productImages
                        .map(
                          (img) =>
                            `<img src="${img.image}" alt="Product Image" class="object-contain" width="120" height="120">`
                        )
                        .join("")}
                    </div>
                  </div>
                </div>
              </form>
              <button
                onclick="closeModal()"
                class="mt-4 text-white bg-red-500 px-4 py-2 rounded-lg"
              >
                Close
              </button>
            </div>
          </div>
        `;

            document.body.appendChild(modalContainer);
            window.closeModal = function () {
              document.body.removeChild(modalContainer);
            };
          } else {
            alert("Failed to fetch the product details");
          }
        } catch (error) {
          console.error("Error:", error);
        }
      }
    }
  });

  window.addEventListener("load", () => {
    const url = new URL(window.location);
    const page = url.searchParams.get("page") || 1;
    fetchAndUpdate(page);
  });
</script>
