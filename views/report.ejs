<div class="flex flex-col gap-4">
  <label for="date-picker" class="text-lg font-semibold">Select a Date:</label>
  <input id="date-picker" type="date" class="border rounded p-2" />
</div>
<div id="charts-container" class="flex flex-col gap-16 mt-4"></div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const chartsContainer = document.getElementById("charts-container");
    const datePicker = document.getElementById("date-picker");
    const today = new Date().toISOString().split('T')[0];
    datePicker.value = today;

    async function fetchChartData(date) {
      try {
        const response = await fetch(`/api/sales-report?date=${date}`);
        const data = await response.json();
        console.log(data); 

        return [

          {
            id: 1,
            type: "pie",
            labels: data.product.today.map(product => product.name),
            data: data.product.today.map(product => product.totalSales),
            label: "Quantity Sold",
            title: `Daily Sales Report (${date})`,
          },
          {
            id: 2,
            type: "pie",
            labels: data.product.week.map(product => product.name),
            data: data.product.week.map(product => product.totalSales),
            label: "Quantity Sold",
            title: `Weekly Sales Report (${date} - Weekly Range)`,
          },
          {
            id: 3,
            type: "pie",
            labels: data.product.month.map(product => product.name),
            data: data.product.month.map(product => product.totalSales),
            label: "Quantity Sold",
            title: `Monthly Sales Report (${date} - Full Month)`,
          },

        ];
      } catch (error) {
        console.error("Error fetching chart data:", error);
      }
    }
    async function fetchTopProductsData(date) {
      try {
        const response = await fetch(`/api/top-sales-report?date=${date}`);
        const data = await response.json();
        console.log(data); 


        return [
          {
            id: 4,
            type: "bar",
            labels: data.product.topToday.map(product => product.name),
            data: data.product.topToday.map(product => product.totalSales),
            label: "Quantity Sold",
            title: `Top 3 Products (Daily) - ${date}`,
          },
          {
            id: 5,
            type: "bar",
            labels: data.product.topWeek.map(product => product.name),
            data: data.product.topWeek.map(product => product.totalSales),
            label: "Quantity Sold",
            title: `Top 3 Products (Weekly) - ${date}`,
          },
          {
            id: 6,
            type: "bar",
            labels: data.product.topMonth.map(product => product.name),
            data: data.product.topMonth.map(product => product.totalSales),
            label: "Quantity Sold",
            title: `Top 3 Products (Monthly) - ${date}`,
          },

        ];
      } catch (error) {
        console.error("Error fetching chart data:", error);
      }
    }
    async function renderCharts(date) {
      const salesData = await fetchChartData(date);
      const topProductsData = await fetchTopProductsData(date);
      const allChartsData = [...salesData, ...topProductsData];

      chartsContainer.innerHTML = "";

      allChartsData.forEach((chartData) => {
        const chartWrapper = document.createElement("div");
        chartWrapper.className = "flex flex-col items-center";

        const chartTitle = document.createElement("div");
        chartTitle.className = "text-lg font-semibold mb-4";
        chartTitle.textContent = chartData.title;

        const canvas = document.createElement("canvas");
        canvas.id = `chart-${chartData.id}`;
        canvas.className = "w-full max-w-lg";

        chartWrapper.appendChild(chartTitle);
        chartWrapper.appendChild(canvas);

        chartsContainer.appendChild(chartWrapper);

        const ctx = canvas.getContext("2d");
        new Chart(ctx, {
          type: chartData.type,
          data: {
            labels: chartData.labels,
            datasets: [
              {
                label: chartData.label,
                data: chartData.data,
                backgroundColor: [
                  "rgba(255, 99, 132, 0.2)",
                  "rgba(54, 162, 235, 0.2)",
                  "rgba(255, 206, 86, 0.2)",
                  "rgba(75, 192, 192, 0.2)",
                ],
                borderColor: [
                  "rgba(255, 99, 132, 1)",
                  "rgba(54, 162, 235, 1)",
                  "rgba(255, 206, 86, 1)",
                  "rgba(75, 192, 192, 1)",
                ],
                borderWidth: 1,
              },
            ],
          },
          options: {
            responsive: true,
            plugins: {
              legend: {
                display: true,
              },
              title: {
                display: true,
                text: chartData.title,
              },
            },
          },
        });
      });
    }







    datePicker.addEventListener("change", function () {
      const selectedDate = new Date(datePicker.value).toISOString().split('T')[0];
      console.log(`Selected date: ${selectedDate}`);
      renderCharts(selectedDate);
    });

    renderCharts(today);
  });
</script>
