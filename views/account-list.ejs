<div class="p-4">
  <form id="filter-form" class="flex gap-4">
    <input
      type="text"
      id="filter-name"
      placeholder="Filter by full name"
      class="px-4 py-2 border rounded"
    />
    <input
      type="text"
      id="filter-email"
      placeholder="Filter by email"
      class="px-4 py-2 border rounded"
    />
    <button
      type="submit"
      class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
    >
      Filter
    </button>
  </form>
</div>

<div class="relative overflow-x-auto">
  <table class="w-full text-sm text-left rtl:text-right text-gray-500">
    <thead class="text-xs text-gray-700 uppercase bg-gray-50">
      <tr>
        <th scope="col" class="px-6 py-3">Name</th>
        <th scope="col" class="px-6 py-3">Email</th>
        <th scope="col" class="px-6 py-3">Registration time</th>
        <th scope="col" class="px-6 py-3">Role</th>
        <th scope="col" class="px-6 py-3">Actions</th>
      </tr>
    </thead>
    <tbody id="account-list">
      <% accounts.forEach(account => { %>
      <tr class="bg-white border-b">
        <th
          scope="row"
          class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap"
        >
          <%= account.fullName %>
        </th>
        <td class="px-6 py-4"><%= account.email %></td>
        <td class="px-6 py-4"><%= account.createdAt %></td>
        <td class="px-6 py-4">
          <%= account.isAdmin === 1 ? 'Admin' : 'Customer' %>
        </td>
        <td class="flex px-6 py-4 gap-4">
          <button
            title="<%= account.isBan === 1 ? 'Unban' : 'Ban' %>"
            class="px-4 py-2 text-white rounded bg-red-500 hover:bg-red-600"
            data-id="<%= account.id %>"
          >
            <%= account.isBan === 1 ? 'Unban' : 'Ban' %>
          </button>
          <button
            class="px-4 py-2 text-white rounded bg-blue-500 hover:bg-blue-600"
            title="View"
            data-id="<%= account.id %>"
          >
            View
          </button>
        </td>
      </tr>
      <% }); %>
    </tbody>
  </table>
</div>
<div class="pagination mt-4 flex justify-center">
  <% for (let i = 1; i <= pageNumber; i++) { %>
  <button
    class="pagination-button px-4 py-2 text-sm rounded-lg <%= page === i ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700' %>"
    data-page="<%= i %>"
  >
    <%= i %>
  </button>
  <% } %>
</div>

<script>
  async function fetchAndUpdate(page) {
    try {
      const response = await fetch(`/accounts?page=${page}`);
      if (!response.ok) throw new Error("Failed to fetch data");

      const data = await response.json();

      const tbody = document.getElementById("account-list");
      tbody.innerHTML = data.accounts
        .map((account) => {
          return `
              <tr class="bg-white border-b">
                <th
                  scope="row"
                  class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap"
                >
                  ${account.fullName}
                </th>
                <td class="px-6 py-4">${account.email}</td>
                <td class="px-6 py-4">${account.createdAt}</td>
                <td class="px-6 py-4">
                  ${account.isAdmin === 1 ? "Admin" : "Customer"}
                </td>
                <td class="flex px-6 py-4 gap-4">
                  <button
                    title="${account.isBan === 1 ? "Unban" : "Ban"}"
                    class="px-4 py-2 text-white rounded bg-red-500 hover:bg-red-600"
                    data-id="${account.id}"
                  >
                    ${account.isBan === 1 ? "Unban" : "Ban"}
                  </button>
                  <button
                    class="px-4 py-2 text-white rounded bg-blue-500 hover:bg-blue-600"
                    title="View"
                    data-id="${account.id}"
                  >
                    View
                  </button>
                </td>
              </tr>
            `;
        })
        .join("");

      const paginationContainer = document.querySelector(".pagination");
      paginationContainer.innerHTML = Array.from(
        { length: data.pageNumber },
        (_, i) => `
            <button
              class="pagination-button px-4 py-2 text-sm rounded-lg ${
                data.page === i + 1
                  ? "bg-blue-500 text-white"
                  : "bg-gray-300 text-gray-700"
              }"
              data-page="${i + 1}"
            >
              ${i + 1}
            </button>
          `
      ).join("");
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  }

  document.querySelector(".pagination").addEventListener("click", (event) => {
    if (event.target.classList.contains("pagination-button")) {
      const page = event.target.getAttribute("data-page");
      fetchAndUpdate(page);
    }
  });

  document
    .getElementById("filter-form")
    .addEventListener("submit", function (event) {
      event.preventDefault();

      const fullNameFilter = document.getElementById("filter-name").value;
      const emailFilter = document.getElementById("filter-email").value;

      const filters = {
        fullName: fullNameFilter,
        email: emailFilter,
      };

      console.log("Filter applied:", JSON.stringify(filters));
    });
</script>
